vector 如果不是new 创立的话
    他本身对象实在栈上的
        但是他管理的内容是在堆里的


vector<int>* intvec = new vector<int>();
vector<int> ans;


push_back(i);

//初始化

初始化方法一:
这种初始化 可能会带来比较高的开销, 因为这里是一开始没有指定多少capacity, 然后再pushback
比如当前一开拓的capacity不够时候, 一般可能就会 再额外一次性开多些来重新分配空间(我觉得不会一个个分配 不然每次插入都分配 开销很大的，所以应该是一次性开多点)
std::vector<int> vec;
for (int i = 1; i <= 5; ++i) {
    vec.push_back(i);
}

初始化方法二:
这种初始化方法开销就小 (我暂时比较倾好这个)
std::vector<int> vec = {1, 2, 3, 4, 5};
当然你也可以
vec.reserve(100);  // 预留足够的capacity， 当然如果你这100的capacity用完了以后 一般可能就会 再额外一次性开多些来重新分配空间(我觉得不会一个个分配 不然每次插入都分配 开销很大的，所以应该是一次性开多点
你的
vec.size()是 5
vec.capacity()是 100


初始化方法三(制定多少元素, 每个位置上默认是什么值):
vector<int> intvec_result(3,6);
结果得到{6,6,6}