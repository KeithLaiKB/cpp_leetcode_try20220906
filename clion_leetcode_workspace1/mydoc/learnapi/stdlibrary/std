
reverse

reverse(rs1.begin(),rs1.end());
时间复杂度o(n) 空间复杂读o(1)
reverse(rs_rv1.begin(),rs_rv1.end());
----------------------------------------------

remove

std::remove(d3.begin(), d3.end(), 3)
目的: std::remove是一个标准库算法，它会遍历给定范围内的元素（这里是从d3.begin()到d3.end()），将所有值等于3的元素“移到”容器的末尾。

效果: std::remove并不实际删除元素!!!!!!!
     而是将所有不等于3的元素移到前面，将等于3的元素留在末尾。
     std::remove返回一个迭代器，指向新“逻辑”末尾（即不包含3的部分）。

假设d3中包含 {1, 2, 3, 4, 3, 5}：

std::remove后，d3会变成 {1, 2, 4, 5, 3, 3}，返回一个指向4后面的迭代器（指向5）。

----------------------------------------------